# Generated by Django 5.2.4 on 2025-07-31 18:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_city', models.CharField(max_length=100)),
                ('truck_capacity_kg', models.PositiveIntegerField()),
                ('is_available', models.BooleanField(default=False)),
                ('hourly_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('experience_years', models.PositiveIntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='driver_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
            },
        ),
        migrations.CreateModel(
            name='Load',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_city', models.CharField(max_length=100)),
                ('delivery_city', models.CharField(max_length=100)),
                ('weight_kg', models.PositiveIntegerField()),
                ('pickup_date', models.DateField()),
                ('max_budget', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('POSTED', 'posted'), ('MATCHED', 'matched'), ('COMPLETED', 'completed')], default='POSTED', max_length=10)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Load',
                'verbose_name_plural': 'Loads',
            },
        ),
        migrations.CreateModel(
            name='LoadMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_category', models.CharField(choices=[('SAME_CITY', 'same_city'), ('NEARBY', 'nearby'), ('REGIONAL', 'regional'), ('LONG_DISTANCE', 'long_distance')], max_length=20)),
                ('match_score', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='api.driver')),
                ('load', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='api.load')),
            ],
            options={
                'verbose_name': 'Load Match',
                'verbose_name_plural': 'Load Matches',
            },
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['is_available'], name='api_driver_is_avai_a8815e_idx'),
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['home_city'], name='api_driver_home_ci_aa9e1c_idx'),
        ),
        migrations.AddIndex(
            model_name='load',
            index=models.Index(fields=['pickup_city', 'delivery_city'], name='api_load_pickup__7f6aab_idx'),
        ),
        migrations.AddIndex(
            model_name='load',
            index=models.Index(fields=['status'], name='api_load_status_a7d295_idx'),
        ),
        migrations.AddIndex(
            model_name='load',
            index=models.Index(fields=['created_at'], name='api_load_created_a09e2c_idx'),
        ),
        migrations.AddIndex(
            model_name='loadmatch',
            index=models.Index(fields=['distance_category'], name='api_loadmat_distanc_79a6d7_idx'),
        ),
        migrations.AddIndex(
            model_name='loadmatch',
            index=models.Index(fields=['match_score'], name='api_loadmat_match_s_04d96b_idx'),
        ),
        migrations.AddIndex(
            model_name='loadmatch',
            index=models.Index(fields=['created_at'], name='api_loadmat_created_4fc95e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='loadmatch',
            unique_together={('load', 'driver')},
        ),
    ]
